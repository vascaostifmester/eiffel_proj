var makelove = {

    debug: false,

    endpoint: null,

    log: function (what) {
        if (makelove.debug) {
            console.log(what);
        }
    },

    exists: function (el) {
        if ($(el).length > 0) {
            return true;
        }
    }, 

    init: function () {

        if (this.exists('#owl-demo')){
            hero.init($('#owl-demo'));
        }

        if( this.exists('.checkout-close')){
            closeCart.init($('.checkout-close'));
        }

        if( this.exists('.ini')){
            openCart.init($('.ini'));
        }

        if( this.exists('.verproj')){
            opencloseProj.init($('.verproj'));
        }

    }

} || {};

(function ($, window, undefined) {
    'use strict';

    $(document).ready(function () {
        makelove.init();
    });

})(jQuery, this);
var closeCart = {
	init: function($el){
		this.$el = $el;
		this.closeBox();
	},

	closeBox: function(){
		console.log($('.big'));
		$('.cart').on('click', '.checkout-close', function(e){
			$(e.delegateTarget).removeClass('big');
		});
	}
};

var hero = {
	init: function($el){
		this.$el = $el;
		this.startOwl();
	},

	startOwl: function(){
		this.$el.owlCarousel({
			navigation : true,
			singleItem : true,
			navigationText : false,
			mouseDrag :  false,
			autoPlay :   3000,
			stopOnHover : true,
			transitionStyle : "goDown"
		});
	}
};
var openCart = {
	init: function($el){
		this.$el = $el;
		this.openBox();
	},

	openBox: function(){
		$('.cart').on('click', '.ini', function(e){
			$(e.delegateTarget).toggleClass('big');
		});
	}
};
var opencloseProj = {
	init: function($el){
		this.$el = $el;
		this.opencloseVer();
	},

	opencloseVer: function(e){
		$('.proj').on('click', '.verproj', function(e){
			console.log(e);
			e.preventDefault();
			// $(e.delegateTarget).toggleClass('projdetail');

			// $(e.delegateTarget).siblings().removeClass('projdetail');

		});
	}
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL19zY3JpcHRzL21haW4uanMiLCIuLi9fc2NyaXB0cy9jbG9zZUNhcnQuanMiLCIuLi9fc2NyaXB0cy9oZXJvLmpzIiwiLi4vX3NjcmlwdHMvb3BlbkNhcnQuanMiLCIuLi9fc2NyaXB0cy9vcGVuY2xvc2VQcm9qLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDaEI7QUFDQSxJQUFJLEtBQUssQ0FBQyxDQUFDLEtBQUssQ0FBQztBQUNqQjtBQUNBLElBQUksUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDO0FBQ25CO0FBQ0EsSUFBSSxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQzFCLFFBQVEsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7QUFDN0IsWUFBWSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRTtBQUM5QixRQUFRLENBQUM7QUFDVCxJQUFJLEVBQUU7QUFDTjtBQUNBLElBQUksTUFBTSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUMzQixRQUFRLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0IsWUFBWSxNQUFNLENBQUMsSUFBSSxDQUFDO0FBQ3hCLFFBQVEsQ0FBQztBQUNULElBQUksRUFBRSxDQUFDO0FBQ1A7QUFDQSxJQUFJLElBQUksQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUN2QjtBQUNBLFFBQVEsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsSUFBSSxJQUFJO0FBQ3RDLFlBQVksSUFBSSxDQUFDLElBQUksS0FBSyxHQUFHLENBQUMsSUFBSSxJQUFJO0FBQ3RDLFFBQVEsQ0FBQztBQUNUO0FB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QVUsR0FBRztBQUMvRDtBQUNBLEVBQUUsR0FBRztBQUNMLENBQUMsQ0FBQztBQUNGIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbWFrZWxvdmUgPSB7XG5cbiAgICBkZWJ1ZzogZmFsc2UsXG5cbiAgICBlbmRwb2ludDogbnVsbCxcblxuICAgIGxvZzogZnVuY3Rpb24gKHdoYXQpIHtcbiAgICAgICAgaWYgKG1ha2Vsb3ZlLmRlYnVnKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyh3aGF0KTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBleGlzdHM6IGZ1bmN0aW9uIChlbCkge1xuICAgICAgICBpZiAoJChlbCkubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9LCBcblxuICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICBpZiAodGhpcy5leGlzdHMoJyNvd2wtZGVtbycpKXtcbiAgICAgICAgICAgIGhlcm8uaW5pdCgkKCcjb3dsLWRlbW8nKSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiggdGhpcy5leGlzdHMoJy5jaGVja291dC1jbG9zZScpKXtcbiAgICAgICAgICAgIGNsb3NlQ2FydC5pbml0KCQoJy5jaGVja291dC1jbG9zZScpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmKCB0aGlzLmV4aXN0cygnLmluaScpKXtcbiAgICAgICAgICAgIG9wZW5DYXJ0LmluaXQoJCgnLmluaScpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmKCB0aGlzLmV4aXN0cygnLnZlcnByb2onKSl7XG4gICAgICAgICAgICBvcGVuY2xvc2VQcm9qLmluaXQoJCgnLnZlcnByb2onKSk7XG4gICAgICAgIH1cblxuICAgIH1cblxufSB8fCB7fTtcblxuKGZ1bmN0aW9uICgkLCB3aW5kb3csIHVuZGVmaW5lZCkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgbWFrZWxvdmUuaW5pdCgpO1xuICAgIH0pO1xuXG59KShqUXVlcnksIHRoaXMpOyIsInZhciBjbG9zZUNhcnQgPSB7XG5cdGluaXQ6IGZ1bmN0aW9uKCRlbCl7XG5cdFx0dGhpcy4kZWwgPSAkZWw7XG5cdFx0dGhpcy5jbG9zZUJveCgpO1xuXHR9LFxuXG5cdGNsb3NlQm94OiBmdW5jdGlvbigpe1xuXHRcdGNvbnNvbGUubG9nKCQoJy5iaWcnKSk7XG5cdFx0JCgnLmNhcnQnKS5vbignY2xpY2snLCAnLmNoZWNrb3V0LWNsb3NlJywgZnVuY3Rpb24oZSl7XG5cdFx0XHQkKGUuZGVsZWdhdGVUYXJnZXQpLnJlbW92ZUNsYXNzKCdiaWcnKTtcblx0XHR9KTtcblx0fVxufTtcbiIsInZhciBoZXJvID0ge1xuXHRpbml0OiBmdW5jdGlvbigkZWwpe1xuXHRcdHRoaXMuJGVsID0gJGVsO1xuXHRcdHRoaXMuc3RhcnRPd2woKTtcblx0fSxcblxuXHRzdGFydE93bDogZnVuY3Rpb24oKXtcblx0XHR0aGlzLiRlbC5vd2xDYXJvdXNlbCh7XG5cdFx0XHRuYXZpZ2F0aW9uIDogdHJ1ZSxcblx0XHRcdHNpbmdsZUl0ZW0gOiB0cnVlLFxuXHRcdFx0bmF2aWdhdGlvblRleHQgOiBmYWxzZSxcblx0XHRcdG1vdXNlRHJhZyA6ICBmYWxzZSxcblx0XHRcdGF1dG9QbGF5IDogICAzMDAwLFxuXHRcdFx0c3RvcE9uSG92ZXIgOiB0cnVlLFxuXHRcdFx0dHJhbnNpdGlvblN0eWxlIDogXCJnb0Rvd25cIlxuXHRcdH0pO1xuXHR9XG59OyIsInZhciBvcGVuQ2FydCA9IHtcblx0aW5pdDogZnVuY3Rpb24oJGVsKXtcblx0XHR0aGlzLiRlbCA9ICRlbDtcblx0XHR0aGlzLm9wZW5Cb3goKTtcblx0fSxcblxuXHRvcGVuQm94OiBmdW5jdGlvbigpe1xuXHRcdCQoJy5jYXJ0Jykub24oJ2NsaWNrJywgJy5pbmknLCBmdW5jdGlvbihlKXtcblx0XHRcdCQoZS5kZWxlZ2F0ZVRhcmdldCkudG9nZ2xlQ2xhc3MoJ2JpZycpO1xuXHRcdH0pO1xuXHR9XG59OyIsInZhciBvcGVuY2xvc2VQcm9qID0ge1xuXHRpbml0OiBmdW5jdGlvbigkZWwpe1xuXHRcdHRoaXMuJGVsID0gJGVsO1xuXHRcdHRoaXMub3BlbmNsb3NlVmVyKCk7XG5cdH0sXG5cblx0b3BlbmNsb3NlVmVyOiBmdW5jdGlvbihlKXtcblx0XHQkKCcucHJvaicpLm9uKCdjbGljaycsICcudmVycHJvaicsIGZ1bmN0aW9uKGUpe1xuXHRcdFx0Y29uc29sZS5sb2coZSk7XG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHQvLyAkKGUuZGVsZWdhdGVUYXJnZXQpLnRvZ2dsZUNsYXNzKCdwcm9qZGV0YWlsJyk7XG5cblx0XHRcdC8vICQoZS5kZWxlZ2F0ZVRhcmdldCkuc2libGluZ3MoKS5yZW1vdmVDbGFzcygncHJvamRldGFpbCcpO1xuXG5cdFx0fSk7XG5cdH1cbn07Il19